"use strict";
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
Object.defineProperty(exports, "__esModule", { value: true });
exports.ERC721MultipleBoxWrapper__factory = void 0;
const ethers_1 = require("ethers");
const _abi = [
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "bytes32",
                name: "root",
                type: "bytes32",
            },
        ],
        name: "AddRoot",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: false,
                internalType: "uint256",
                name: "tokenId",
                type: "uint256",
            },
            {
                indexed: false,
                internalType: "bytes32",
                name: "root",
                type: "bytes32",
            },
            {
                indexed: false,
                internalType: "bytes32[]",
                name: "proofs",
                type: "bytes32[]",
            },
            {
                indexed: false,
                internalType: "address",
                name: "creator",
                type: "address",
            },
            {
                indexed: false,
                internalType: "string",
                name: "uri",
                type: "string",
            },
        ],
        name: "ClaimToken",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "address",
                name: "to",
                type: "address",
            },
            {
                indexed: false,
                internalType: "uint256",
                name: "tokenId",
                type: "uint256",
            },
        ],
        name: "MintToken",
        type: "event",
    },
    {
        inputs: [
            {
                internalType: "bytes32",
                name: "key_",
                type: "bytes32",
            },
        ],
        name: "isClaimed",
        outputs: [
            {
                internalType: "bool",
                name: "",
                type: "bool",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bytes32",
                name: "key_",
                type: "bytes32",
            },
        ],
        name: "isMinted",
        outputs: [
            {
                internalType: "bool",
                name: "",
                type: "bool",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bytes32",
                name: "root",
                type: "bytes32",
            },
            {
                internalType: "bytes32[]",
                name: "proofs",
                type: "bytes32[]",
            },
            {
                internalType: "address",
                name: "creator_",
                type: "address",
            },
            {
                internalType: "string",
                name: "uri",
                type: "string",
            },
        ],
        name: "isValid",
        outputs: [
            {
                internalType: "bool",
                name: "",
                type: "bool",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bytes32",
                name: "root",
                type: "bytes32",
            },
            {
                internalType: "bytes32[]",
                name: "proofs",
                type: "bytes32[]",
            },
            {
                internalType: "address",
                name: "creator_",
                type: "address",
            },
            {
                internalType: "string",
                name: "uri",
                type: "string",
            },
        ],
        name: "key",
        outputs: [
            {
                internalType: "bytes32",
                name: "",
                type: "bytes32",
            },
        ],
        stateMutability: "pure",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bytes32",
                name: "root",
                type: "bytes32",
            },
        ],
        name: "rootExists",
        outputs: [
            {
                internalType: "bool",
                name: "",
                type: "bool",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bytes32",
                name: "",
                type: "bytes32",
            },
        ],
        name: "tokenIds",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        name: "tokens",
        outputs: [
            {
                internalType: "address",
                name: "creator",
                type: "address",
            },
            {
                internalType: "string",
                name: "uri",
                type: "string",
            },
            {
                internalType: "uint8",
                name: "status",
                type: "uint8",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
];
const _bytecode = "0x608060405234801561001057600080fd5b5061078e806100206000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c80637ad908d91161005b5780637ad908d9146100fa5780639e4c0be31461010d578063a2520ae114610142578063b89c3952146101555761007d565b80630524b18f1461008257806336622b6b146100aa5780634f64b2be146100d8575b600080fd5b610095610090366004610497565b610189565b60405190151581526020015b60405180910390f35b6100ca6100b8366004610497565b60016020526000908152604090205481565b6040519081526020016100a1565b6100eb6100e6366004610497565b6101a1565b6040516100a193929190610632565b6100956101083660046104af565b610259565b61009561011b366004610497565b600090815260016020908152604080832054835290829052902060029081015460ff161490565b6100ca6101503660046104af565b61030c565b610095610163366004610497565b60009081526001602090815260408083205483529082905290206002015460ff16151590565b60008181526002602052604090205460ff165b919050565b600060208190529081526040902080546001820180546001600160a01b0390921692916101cd906106e0565b80601f01602080910402602001604051908101604052809291908181526020018280546101f9906106e0565b80156102465780601f1061021b57610100808354040283529160200191610246565b820191906000526020600020905b81548152906001019060200180831161022957829003601f168201915b5050506002909301549192505060ff1683565b60008461026581610189565b6102c95760405162461bcd60e51b815260206004820152602b60248201527f4552433732314d756c7469706c65426f78577261707065723a206e6f6e65786960448201526a39ba32b73a103937b7ba1760a91b606482015260840160405180910390fd5b600084846040516020016102de929190610594565b604051602081830303815290604052805190602001209050610301868883610345565b979650505050505050565b60008484848460405160200161032594939291906105cc565b604051602081830303815290604052805190602001209050949350505050565b600082610352858461035b565b14949350505050565b600081815b845181101561040d57600085828151811061038b57634e487b7160e01b600052603260045260246000fd5b602002602001015190508083116103cd5760408051602081018590529081018290526060016040516020818303038152906040528051906020012092506103fa565b60408051602081018390529081018490526060016040516020818303038152906040528051906020012092505b50806104058161071b565b915050610360565b509392505050565b80356001600160a01b038116811461019c57600080fd5b600082601f83011261043c578081fd5b813567ffffffffffffffff81111561045657610456610742565b610469601f8201601f191660200161067f565b81815284602083860101111561047d578283fd5b816020850160208301379081016020019190915292915050565b6000602082840312156104a8578081fd5b5035919050565b600080600080608085870312156104c4578283fd5b8435935060208086013567ffffffffffffffff808211156104e3578586fd5b818801915088601f8301126104f6578586fd5b81358181111561050857610508610742565b83810261051685820161067f565b8281528581019085870183870188018e1015610530578a8bfd5b8a96505b84871015610552578035835260019690960195918701918701610534565b5098506105659250505060408901610415565b9450606088013592508083111561057a578384fd5b50506105888782880161042c565b91505092959194509250565b60006bffffffffffffffffffffffff198460601b16825282516105be8160148501602087016106b0565b919091016014019392505050565b600085825260208083018651828801845b828110156105f9578151845292840192908401906001016105dd565b5050506bffffffffffffffffffffffff198660601b168152845161062381601484018589016106b0565b01601401979650505050505050565b600060018060a01b038516825260606020830152835180606084015261065f8160808501602088016106b0565b60ff93909316604083015250601f91909101601f19160160800192915050565b604051601f8201601f1916810167ffffffffffffffff811182821017156106a8576106a8610742565b604052919050565b60005b838110156106cb5781810151838201526020016106b3565b838111156106da576000848401525b50505050565b6002810460018216806106f457607f821691505b6020821081141561071557634e487b7160e01b600052602260045260246000fd5b50919050565b600060001982141561073b57634e487b7160e01b81526011600452602481fd5b5060010190565b634e487b7160e01b600052604160045260246000fdfea26469706673582212204795fb35adfa602966516de093632659a6e7e2fea4b1afae019baec65399cae664736f6c63430008020033";
class ERC721MultipleBoxWrapper__factory extends ethers_1.ContractFactory {
    constructor(...args) {
        if (args.length === 1) {
            super(_abi, _bytecode, args[0]);
        }
        else {
            super(...args);
        }
    }
    deploy(overrides) {
        return super.deploy(overrides || {});
    }
    getDeployTransaction(overrides) {
        return super.getDeployTransaction(overrides || {});
    }
    attach(address) {
        return super.attach(address);
    }
    connect(signer) {
        return super.connect(signer);
    }
    static createInterface() {
        return new ethers_1.utils.Interface(_abi);
    }
    static connect(address, signerOrProvider) {
        return new ethers_1.Contract(address, _abi, signerOrProvider);
    }
}
exports.ERC721MultipleBoxWrapper__factory = ERC721MultipleBoxWrapper__factory;
ERC721MultipleBoxWrapper__factory.bytecode = _bytecode;
ERC721MultipleBoxWrapper__factory.abi = _abi;
