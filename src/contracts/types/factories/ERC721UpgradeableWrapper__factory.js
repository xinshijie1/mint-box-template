"use strict";
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
Object.defineProperty(exports, "__esModule", { value: true });
exports.ERC721UpgradeableWrapper__factory = void 0;
const ethers_1 = require("ethers");
const _abi = [
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "address",
                name: "owner",
                type: "address",
            },
            {
                indexed: true,
                internalType: "address",
                name: "approved",
                type: "address",
            },
            {
                indexed: true,
                internalType: "uint256",
                name: "tokenId",
                type: "uint256",
            },
        ],
        name: "Approval",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "address",
                name: "owner",
                type: "address",
            },
            {
                indexed: true,
                internalType: "address",
                name: "operator",
                type: "address",
            },
            {
                indexed: false,
                internalType: "bool",
                name: "approved",
                type: "bool",
            },
        ],
        name: "ApprovalForAll",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "address",
                name: "from",
                type: "address",
            },
            {
                indexed: true,
                internalType: "address",
                name: "to",
                type: "address",
            },
            {
                indexed: true,
                internalType: "uint256",
                name: "tokenId",
                type: "uint256",
            },
        ],
        name: "Transfer",
        type: "event",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "to",
                type: "address",
            },
            {
                internalType: "uint256",
                name: "tokenId",
                type: "uint256",
            },
        ],
        name: "approve",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "owner",
                type: "address",
            },
        ],
        name: "balanceOf",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "tokenId",
                type: "uint256",
            },
        ],
        name: "burn",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "tokenId",
                type: "uint256",
            },
        ],
        name: "getApproved",
        outputs: [
            {
                internalType: "address",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "owner",
                type: "address",
            },
            {
                internalType: "address",
                name: "operator",
                type: "address",
            },
        ],
        name: "isApprovedForAll",
        outputs: [
            {
                internalType: "bool",
                name: "",
                type: "bool",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "name",
        outputs: [
            {
                internalType: "string",
                name: "",
                type: "string",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "tokenId",
                type: "uint256",
            },
        ],
        name: "ownerOf",
        outputs: [
            {
                internalType: "address",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "from",
                type: "address",
            },
            {
                internalType: "address",
                name: "to",
                type: "address",
            },
            {
                internalType: "uint256",
                name: "tokenId",
                type: "uint256",
            },
        ],
        name: "safeTransferFrom",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "from",
                type: "address",
            },
            {
                internalType: "address",
                name: "to",
                type: "address",
            },
            {
                internalType: "uint256",
                name: "tokenId",
                type: "uint256",
            },
            {
                internalType: "bytes",
                name: "_data",
                type: "bytes",
            },
        ],
        name: "safeTransferFrom",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "operator",
                type: "address",
            },
            {
                internalType: "bool",
                name: "approved",
                type: "bool",
            },
        ],
        name: "setApprovalForAll",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bytes4",
                name: "interfaceId",
                type: "bytes4",
            },
        ],
        name: "supportsInterface",
        outputs: [
            {
                internalType: "bool",
                name: "",
                type: "bool",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "symbol",
        outputs: [
            {
                internalType: "string",
                name: "",
                type: "string",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "index",
                type: "uint256",
            },
        ],
        name: "tokenByIndex",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "owner",
                type: "address",
            },
            {
                internalType: "uint256",
                name: "index",
                type: "uint256",
            },
        ],
        name: "tokenOfOwnerByIndex",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "tokenId",
                type: "uint256",
            },
        ],
        name: "tokenURI",
        outputs: [
            {
                internalType: "string",
                name: "",
                type: "string",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "totalSupply",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "from",
                type: "address",
            },
            {
                internalType: "address",
                name: "to",
                type: "address",
            },
            {
                internalType: "uint256",
                name: "tokenId",
                type: "uint256",
            },
        ],
        name: "transferFrom",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
];
const _bytecode = "0x608060405260fb805463ffffffff191663e8a3d48517905534801561002357600080fd5b50611800806100336000396000f3fe608060405234801561001057600080fd5b506004361061010b5760003560e01c806342966c68116100a257806395d89b411161007157806395d89b4114610224578063a22cb4651461022c578063b88d4fde1461023f578063c87b56dd14610252578063e985e9c5146102655761010b565b806342966c68146101d85780634f6ccce7146101eb5780636352211e146101fe57806370a08231146102115761010b565b806318160ddd116100de57806318160ddd1461018d57806323b872dd1461019f5780632f745c59146101b257806342842e0e146101c55761010b565b806301ffc9a71461011057806306fdde0314610138578063081812fc1461014d578063095ea7b314610178575b600080fd5b61012361011e3660046114fb565b6102a1565b60405190151581526020015b60405180910390f35b6101406102d1565b60405161012f91906115e3565b61016061015b366004611533565b610363565b6040516001600160a01b03909116815260200161012f565b61018b6101863660046114d2565b6103fd565b005b6099545b60405190815260200161012f565b61018b6101ad366004611388565b610513565b6101916101c03660046114d2565b610545565b61018b6101d3366004611388565b6105db565b61018b6101e6366004611533565b6105f6565b6101916101f9366004611533565b610670565b61016061020c366004611533565b610711565b61019161021f36600461133c565b610788565b61014061080f565b61018b61023a366004611498565b61081e565b61018b61024d3660046113c3565b61082d565b610140610260366004611533565b610865565b610123610273366004611356565b6001600160a01b039182166000908152606a6020908152604080832093909416825291909152205460ff1690565b60006102ac8261094d565b806102c9575060fb5460e01b6001600160e01b0319908116908316145b90505b919050565b6060606580546102e090611708565b80601f016020809104026020016040519081016040528092919081815260200182805461030c90611708565b80156103595780601f1061032e57610100808354040283529160200191610359565b820191906000526020600020905b81548152906001019060200180831161033c57829003601f168201915b5050505050905090565b6000818152606760205260408120546001600160a01b03166103e15760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b60648201526084015b60405180910390fd5b506000908152606960205260409020546001600160a01b031690565b600061040882610711565b9050806001600160a01b0316836001600160a01b031614156104765760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b60648201526084016103d8565b336001600160a01b038216148061049257506104928133610273565b6105045760405162461bcd60e51b815260206004820152603860248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f7760448201527f6e6572206e6f7220617070726f76656420666f7220616c6c000000000000000060648201526084016103d8565b61050e8383610972565b505050565b61051e335b826109e0565b61053a5760405162461bcd60e51b81526004016103d890611648565b61050e838383610ad7565b600061055083610788565b82106105b25760405162461bcd60e51b815260206004820152602b60248201527f455243373231456e756d657261626c653a206f776e657220696e646578206f7560448201526a74206f6620626f756e647360a81b60648201526084016103d8565b506001600160a01b03919091166000908152609760209081526040808320938352929052205490565b61050e8383836040518060200160405280600081525061082d565b6105ff33610518565b6106645760405162461bcd60e51b815260206004820152603060248201527f4552433732314275726e61626c653a2063616c6c6572206973206e6f74206f7760448201526f1b995c881b9bdc88185c1c1c9bdd995960821b60648201526084016103d8565b61066d81610c82565b50565b600061067b60995490565b82106106de5760405162461bcd60e51b815260206004820152602c60248201527f455243373231456e756d657261626c653a20676c6f62616c20696e646578206f60448201526b7574206f6620626f756e647360a01b60648201526084016103d8565b609982815481106106ff57634e487b7160e01b600052603260045260246000fd5b90600052602060002001549050919050565b6000818152606760205260408120546001600160a01b0316806102c95760405162461bcd60e51b815260206004820152602960248201527f4552433732313a206f776e657220717565727920666f72206e6f6e657869737460448201526832b73a103a37b5b2b760b91b60648201526084016103d8565b60006001600160a01b0382166107f35760405162461bcd60e51b815260206004820152602a60248201527f4552433732313a2062616c616e636520717565727920666f7220746865207a65604482015269726f206164647265737360b01b60648201526084016103d8565b506001600160a01b031660009081526068602052604090205490565b6060606680546102e090611708565b610829338383610d29565b5050565b61083733836109e0565b6108535760405162461bcd60e51b81526004016103d890611648565b61085f84848484610df8565b50505050565b6000818152606760205260409020546060906001600160a01b03166108e45760405162461bcd60e51b815260206004820152602f60248201527f4552433732314d657461646174613a2055524920717565727920666f72206e6f60448201526e3732bc34b9ba32b73a103a37b5b2b760891b60648201526084016103d8565b60006108fb60408051602081019091526000815290565b9050600081511161091b5760405180602001604052806000815250610946565b8061092584610e2b565b604051602001610936929190611577565b6040516020818303038152906040525b9392505050565b60006001600160e01b0319821663780e9d6360e01b14806102c957506102c982610f46565b600081815260696020526040902080546001600160a01b0319166001600160a01b03841690811790915581906109a782610711565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b6000818152606760205260408120546001600160a01b0316610a595760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b60648201526084016103d8565b6000610a6483610711565b9050806001600160a01b0316846001600160a01b03161480610a9f5750836001600160a01b0316610a9484610363565b6001600160a01b0316145b80610acf57506001600160a01b038082166000908152606a602090815260408083209388168352929052205460ff165b949350505050565b826001600160a01b0316610aea82610711565b6001600160a01b031614610b525760405162461bcd60e51b815260206004820152602960248201527f4552433732313a207472616e73666572206f6620746f6b656e2074686174206960448201526839903737ba1037bbb760b91b60648201526084016103d8565b6001600160a01b038216610bb45760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b60648201526084016103d8565b610bbf838383610f96565b610bca600082610972565b6001600160a01b0383166000908152606860205260408120805460019290610bf39084906116c5565b90915550506001600160a01b0382166000908152606860205260408120805460019290610c21908490611699565b909155505060008181526067602052604080822080546001600160a01b0319166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b6000610c8d82610711565b9050610c9b81600084610f96565b610ca6600083610972565b6001600160a01b0381166000908152606860205260408120805460019290610ccf9084906116c5565b909155505060008281526067602052604080822080546001600160a01b0319169055518391906001600160a01b038416907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908390a45050565b816001600160a01b0316836001600160a01b03161415610d8b5760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c65720000000000000060448201526064016103d8565b6001600160a01b038381166000818152606a6020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b610e03848484610ad7565b610e0f84848484610fa1565b61085f5760405162461bcd60e51b81526004016103d8906115f6565b606081610e5057506040805180820190915260018152600360fc1b60208201526102cc565b8160005b8115610e7a5780610e6481611743565b9150610e739050600a836116b1565b9150610e54565b60008167ffffffffffffffff811115610ea357634e487b7160e01b600052604160045260246000fd5b6040519080825280601f01601f191660200182016040528015610ecd576020820181803683370190505b5090505b8415610acf57610ee26001836116c5565b9150610eef600a8661175e565b610efa906030611699565b60f81b818381518110610f1d57634e487b7160e01b600052603260045260246000fd5b60200101906001600160f81b031916908160001a905350610f3f600a866116b1565b9450610ed1565b60006001600160e01b031982166380ac58cd60e01b1480610f7757506001600160e01b03198216635b5e139f60e01b145b806102c957506301ffc9a760e01b6001600160e01b03198316146102c9565b61050e8383836110ae565b60006001600160a01b0384163b156110a357604051630a85bd0160e11b81526001600160a01b0385169063150b7a0290610fe59033908990889088906004016115a6565b602060405180830381600087803b158015610fff57600080fd5b505af192505050801561102f575060408051601f3d908101601f1916820190925261102c91810190611517565b60015b611089573d80801561105d576040519150601f19603f3d011682016040523d82523d6000602084013e611062565b606091505b5080516110815760405162461bcd60e51b81526004016103d8906115f6565b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050610acf565b506001949350505050565b6001600160a01b0383166111095761110481609980546000838152609a60205260408120829055600182018355919091527f72a152ddfb8e864297c917af52ea6c1c68aead0fee1a62673fcc7e0c94979d000155565b61112c565b816001600160a01b0316836001600160a01b03161461112c5761112c838261116b565b6001600160a01b0382166111485761114381611208565b61050e565b826001600160a01b0316826001600160a01b03161461050e5761050e82826112e1565b6000600161117884610788565b61118291906116c5565b6000838152609860205260409020549091508082146111d5576001600160a01b03841660009081526097602090815260408083208584528252808320548484528184208190558352609890915290208190555b5060009182526098602090815260408084208490556001600160a01b039094168352609781528383209183525290812055565b60995460009061121a906001906116c5565b6000838152609a60205260408120546099805493945090928490811061125057634e487b7160e01b600052603260045260246000fd5b90600052602060002001549050806099838154811061127f57634e487b7160e01b600052603260045260246000fd5b6000918252602080832090910192909255828152609a909152604080822084905585825281205560998054806112c557634e487b7160e01b600052603160045260246000fd5b6001900381819060005260206000200160009055905550505050565b60006112ec83610788565b6001600160a01b039093166000908152609760209081526040808320868452825280832085905593825260989052919091209190915550565b80356001600160a01b03811681146102cc57600080fd5b60006020828403121561134d578081fd5b61094682611325565b60008060408385031215611368578081fd5b61137183611325565b915061137f60208401611325565b90509250929050565b60008060006060848603121561139c578081fd5b6113a584611325565b92506113b360208501611325565b9150604084013590509250925092565b600080600080608085870312156113d8578081fd5b6113e185611325565b93506113ef60208601611325565b925060408501359150606085013567ffffffffffffffff80821115611412578283fd5b818701915087601f830112611425578283fd5b8135818111156114375761143761179e565b604051601f8201601f19908116603f0116810190838211818310171561145f5761145f61179e565b816040528281528a6020848701011115611477578586fd5b82602086016020830137918201602001949094529598949750929550505050565b600080604083850312156114aa578182fd5b6114b383611325565b9150602083013580151581146114c7578182fd5b809150509250929050565b600080604083850312156114e4578182fd5b6114ed83611325565b946020939093013593505050565b60006020828403121561150c578081fd5b8135610946816117b4565b600060208284031215611528578081fd5b8151610946816117b4565b600060208284031215611544578081fd5b5035919050565b600081518084526115638160208601602086016116dc565b601f01601f19169290920160200192915050565b600083516115898184602088016116dc565b83519083019061159d8183602088016116dc565b01949350505050565b6001600160a01b03858116825284166020820152604081018390526080606082018190526000906115d99083018461154b565b9695505050505050565b600060208252610946602083018461154b565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b60208082526031908201527f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f6040820152701ddb995c881b9bdc88185c1c1c9bdd9959607a1b606082015260800190565b600082198211156116ac576116ac611772565b500190565b6000826116c0576116c0611788565b500490565b6000828210156116d7576116d7611772565b500390565b60005b838110156116f75781810151838201526020016116df565b8381111561085f5750506000910152565b60028104600182168061171c57607f821691505b6020821081141561173d57634e487b7160e01b600052602260045260246000fd5b50919050565b600060001982141561175757611757611772565b5060010190565b60008261176d5761176d611788565b500690565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052601260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160e01b03198116811461066d57600080fdfea2646970667358221220350a6c78bd3212ec14f839fe62e443fe20ebe8e648c901a83da489609dbae7e264736f6c63430008020033";
class ERC721UpgradeableWrapper__factory extends ethers_1.ContractFactory {
    constructor(...args) {
        if (args.length === 1) {
            super(_abi, _bytecode, args[0]);
        }
        else {
            super(...args);
        }
    }
    deploy(overrides) {
        return super.deploy(overrides || {});
    }
    getDeployTransaction(overrides) {
        return super.getDeployTransaction(overrides || {});
    }
    attach(address) {
        return super.attach(address);
    }
    connect(signer) {
        return super.connect(signer);
    }
    static createInterface() {
        return new ethers_1.utils.Interface(_abi);
    }
    static connect(address, signerOrProvider) {
        return new ethers_1.Contract(address, _abi, signerOrProvider);
    }
}
exports.ERC721UpgradeableWrapper__factory = ERC721UpgradeableWrapper__factory;
ERC721UpgradeableWrapper__factory.bytecode = _bytecode;
ERC721UpgradeableWrapper__factory.abi = _abi;
