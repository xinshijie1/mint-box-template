"use strict";
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
Object.defineProperty(exports, "__esModule", { value: true });
exports.ERC1155Upgradeable__factory = void 0;
const ethers_1 = require("ethers");
const _abi = [
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "address",
                name: "account",
                type: "address",
            },
            {
                indexed: true,
                internalType: "address",
                name: "operator",
                type: "address",
            },
            {
                indexed: false,
                internalType: "bool",
                name: "approved",
                type: "bool",
            },
        ],
        name: "ApprovalForAll",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "address",
                name: "operator",
                type: "address",
            },
            {
                indexed: true,
                internalType: "address",
                name: "from",
                type: "address",
            },
            {
                indexed: true,
                internalType: "address",
                name: "to",
                type: "address",
            },
            {
                indexed: false,
                internalType: "uint256[]",
                name: "ids",
                type: "uint256[]",
            },
            {
                indexed: false,
                internalType: "uint256[]",
                name: "values",
                type: "uint256[]",
            },
        ],
        name: "TransferBatch",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "address",
                name: "operator",
                type: "address",
            },
            {
                indexed: true,
                internalType: "address",
                name: "from",
                type: "address",
            },
            {
                indexed: true,
                internalType: "address",
                name: "to",
                type: "address",
            },
            {
                indexed: false,
                internalType: "uint256",
                name: "id",
                type: "uint256",
            },
            {
                indexed: false,
                internalType: "uint256",
                name: "value",
                type: "uint256",
            },
        ],
        name: "TransferSingle",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: false,
                internalType: "string",
                name: "value",
                type: "string",
            },
            {
                indexed: true,
                internalType: "uint256",
                name: "id",
                type: "uint256",
            },
        ],
        name: "URI",
        type: "event",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "account",
                type: "address",
            },
            {
                internalType: "uint256",
                name: "id",
                type: "uint256",
            },
        ],
        name: "balanceOf",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address[]",
                name: "accounts",
                type: "address[]",
            },
            {
                internalType: "uint256[]",
                name: "ids",
                type: "uint256[]",
            },
        ],
        name: "balanceOfBatch",
        outputs: [
            {
                internalType: "uint256[]",
                name: "",
                type: "uint256[]",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "account",
                type: "address",
            },
            {
                internalType: "address",
                name: "operator",
                type: "address",
            },
        ],
        name: "isApprovedForAll",
        outputs: [
            {
                internalType: "bool",
                name: "",
                type: "bool",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "from",
                type: "address",
            },
            {
                internalType: "address",
                name: "to",
                type: "address",
            },
            {
                internalType: "uint256[]",
                name: "ids",
                type: "uint256[]",
            },
            {
                internalType: "uint256[]",
                name: "amounts",
                type: "uint256[]",
            },
            {
                internalType: "bytes",
                name: "data",
                type: "bytes",
            },
        ],
        name: "safeBatchTransferFrom",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "from",
                type: "address",
            },
            {
                internalType: "address",
                name: "to",
                type: "address",
            },
            {
                internalType: "uint256",
                name: "id",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "amount",
                type: "uint256",
            },
            {
                internalType: "bytes",
                name: "data",
                type: "bytes",
            },
        ],
        name: "safeTransferFrom",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "operator",
                type: "address",
            },
            {
                internalType: "bool",
                name: "approved",
                type: "bool",
            },
        ],
        name: "setApprovalForAll",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bytes4",
                name: "interfaceId",
                type: "bytes4",
            },
        ],
        name: "supportsInterface",
        outputs: [
            {
                internalType: "bool",
                name: "",
                type: "bool",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        name: "uri",
        outputs: [
            {
                internalType: "string",
                name: "",
                type: "string",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
];
const _bytecode = "0x608060405234801561001057600080fd5b50611463806100206000396000f3fe608060405234801561001057600080fd5b50600436106100875760003560e01c80634e1273f41161005b5780634e1273f41461010a578063a22cb4651461012a578063e985e9c51461013d578063f242432a1461017957610087565b8062fdd58e1461008c57806301ffc9a7146100b25780630e89341c146100d55780632eb2c2d6146100f5575b600080fd5b61009f61009a366004610ee4565b61018c565b6040519081526020015b60405180910390f35b6100c56100c0366004610fd6565b610225565b60405190151581526020016100a9565b6100e86100e3366004611015565b610279565b6040516100a99190611196565b610108610103366004610da1565b61030d565b005b61011d610118366004610f0d565b6103b6565b6040516100a99190611155565b610108610138366004610eaa565b610518565b6100c561014b366004610d6f565b6001600160a01b03918216600090815260666020908152604080832093909416825291909152205460ff1690565b610108610187366004610e47565b61052e565b60006001600160a01b0383166101fd5760405162461bcd60e51b815260206004820152602b60248201527f455243313135353a2062616c616e636520717565727920666f7220746865207a60448201526a65726f206164647265737360a81b60648201526084015b60405180910390fd5b5060009081526065602090815260408083206001600160a01b03949094168352929052205490565b60006001600160e01b03198216636cdb3d1360e11b148061025657506001600160e01b031982166303a24d0760e21b145b8061027157506301ffc9a760e01b6001600160e01b03198316145b90505b919050565b606060678054610288906112bc565b80601f01602080910402602001604051908101604052809291908181526020018280546102b4906112bc565b80156103015780601f106102d657610100808354040283529160200191610301565b820191906000526020600020905b8154815290600101906020018083116102e457829003601f168201915b50505050509050919050565b6103156105c7565b6001600160a01b0316856001600160a01b0316148061033b575061033b8561014b6105c7565b6103a25760405162461bcd60e51b815260206004820152603260248201527f455243313135353a207472616e736665722063616c6c6572206973206e6f74206044820152711bdddb995c881b9bdc88185c1c1c9bdd995960721b60648201526084016101f4565b6103af85858585856105cc565b5050505050565b6060815183511461041b5760405162461bcd60e51b815260206004820152602960248201527f455243313135353a206163636f756e747320616e6420696473206c656e677468604482015268040dad2e6dac2e8c6d60bb1b60648201526084016101f4565b6000835167ffffffffffffffff81111561044557634e487b7160e01b600052604160045260246000fd5b60405190808252806020026020018201604052801561046e578160200160208202803683370190505b50905060005b8451811015610510576104d58582815181106104a057634e487b7160e01b600052603260045260246000fd5b60200260200101518583815181106104c857634e487b7160e01b600052603260045260246000fd5b602002602001015161018c565b8282815181106104f557634e487b7160e01b600052603260045260246000fd5b602090810291909101015261050981611324565b9050610474565b509392505050565b61052a6105236105c7565b83836107d3565b5050565b6105366105c7565b6001600160a01b0316856001600160a01b0316148061055c575061055c8561014b6105c7565b6105ba5760405162461bcd60e51b815260206004820152602960248201527f455243313135353a2063616c6c6572206973206e6f74206f776e6572206e6f7260448201526808185c1c1c9bdd995960ba1b60648201526084016101f4565b6103af85858585856108b4565b335b90565b815183511461062e5760405162461bcd60e51b815260206004820152602860248201527f455243313135353a2069647320616e6420616d6f756e7473206c656e677468206044820152670dad2e6dac2e8c6d60c31b60648201526084016101f4565b6001600160a01b0384166106545760405162461bcd60e51b81526004016101f4906111f1565b600061065e6105c7565b905060005b845181101561076557600085828151811061068e57634e487b7160e01b600052603260045260246000fd5b6020026020010151905060008583815181106106ba57634e487b7160e01b600052603260045260246000fd5b60209081029190910181015160008481526065835260408082206001600160a01b038e16835290935291909120549091508181101561070b5760405162461bcd60e51b81526004016101f490611236565b60008381526065602090815260408083206001600160a01b038e8116855292528083208585039055908b1682528120805484929061074a9084906112a4565b925050819055505050508061075e90611324565b9050610663565b50846001600160a01b0316866001600160a01b0316826001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb87876040516107b5929190611168565b60405180910390a46107cb8187878787876109e9565b505050505050565b816001600160a01b0316836001600160a01b031614156108475760405162461bcd60e51b815260206004820152602960248201527f455243313135353a2073657474696e6720617070726f76616c20737461747573604482015268103337b91039b2b63360b91b60648201526084016101f4565b6001600160a01b03838116600081815260666020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b6001600160a01b0384166108da5760405162461bcd60e51b81526004016101f4906111f1565b60006108e46105c7565b90506108fe8187876108f588610b54565b6103af88610b54565b60008481526065602090815260408083206001600160a01b038a168452909152902054838110156109415760405162461bcd60e51b81526004016101f490611236565b60008581526065602090815260408083206001600160a01b038b81168552925280832087850390559088168252812080548692906109809084906112a4565b909155505060408051868152602081018690526001600160a01b03808916928a821692918616917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a46109e0828888888888610bad565b50505050505050565b6001600160a01b0384163b156107cb5760405163bc197c8160e01b81526001600160a01b0385169063bc197c8190610a2d90899089908890889088906004016110b2565b602060405180830381600087803b158015610a4757600080fd5b505af1925050508015610a77575060408051601f3d908101601f19168201909252610a7491810190610ff9565b60015b610b2457610a8361136b565b806308c379a01415610abd5750610a98611382565b80610aa35750610abf565b8060405162461bcd60e51b81526004016101f49190611196565b505b60405162461bcd60e51b815260206004820152603460248201527f455243313135353a207472616e7366657220746f206e6f6e20455243313135356044820152732932b1b2b4bb32b91034b6b83632b6b2b73a32b960611b60648201526084016101f4565b6001600160e01b0319811663bc197c8160e01b146109e05760405162461bcd60e51b81526004016101f4906111a9565b60408051600180825281830190925260609160009190602080830190803683370190505090508281600081518110610b9c57634e487b7160e01b600052603260045260246000fd5b602090810291909101015292915050565b6001600160a01b0384163b156107cb5760405163f23a6e6160e01b81526001600160a01b0385169063f23a6e6190610bf19089908990889088908890600401611110565b602060405180830381600087803b158015610c0b57600080fd5b505af1925050508015610c3b575060408051601f3d908101601f19168201909252610c3891810190610ff9565b60015b610c4757610a8361136b565b6001600160e01b0319811663f23a6e6160e01b146109e05760405162461bcd60e51b81526004016101f4906111a9565b80356001600160a01b038116811461027457600080fd5b600082601f830112610c9e578081fd5b81356020610cab82611280565b604051610cb882826112f7565b838152828101915085830183850287018401881015610cd5578586fd5b855b85811015610cf357813584529284019290840190600101610cd7565b5090979650505050505050565b600082601f830112610d10578081fd5b813567ffffffffffffffff811115610d2a57610d2a611355565b604051610d41601f8301601f1916602001826112f7565b818152846020838601011115610d55578283fd5b816020850160208301379081016020019190915292915050565b60008060408385031215610d81578182fd5b610d8a83610c77565b9150610d9860208401610c77565b90509250929050565b600080600080600060a08688031215610db8578081fd5b610dc186610c77565b9450610dcf60208701610c77565b9350604086013567ffffffffffffffff80821115610deb578283fd5b610df789838a01610c8e565b94506060880135915080821115610e0c578283fd5b610e1889838a01610c8e565b93506080880135915080821115610e2d578283fd5b50610e3a88828901610d00565b9150509295509295909350565b600080600080600060a08688031215610e5e578081fd5b610e6786610c77565b9450610e7560208701610c77565b93506040860135925060608601359150608086013567ffffffffffffffff811115610e9e578182fd5b610e3a88828901610d00565b60008060408385031215610ebc578182fd5b610ec583610c77565b915060208301358015158114610ed9578182fd5b809150509250929050565b60008060408385031215610ef6578182fd5b610eff83610c77565b946020939093013593505050565b60008060408385031215610f1f578182fd5b823567ffffffffffffffff80821115610f36578384fd5b818501915085601f830112610f49578384fd5b81356020610f5682611280565b604051610f6382826112f7565b8381528281019150858301838502870184018b1015610f80578889fd5b8896505b84871015610fa957610f9581610c77565b835260019690960195918301918301610f84565b5096505086013592505080821115610fbf578283fd5b50610fcc85828601610c8e565b9150509250929050565b600060208284031215610fe7578081fd5b8135610ff281611414565b9392505050565b60006020828403121561100a578081fd5b8151610ff281611414565b600060208284031215611026578081fd5b5035919050565b6000815180845260208085019450808401835b8381101561105c57815187529582019590820190600101611040565b509495945050505050565b60008151808452815b8181101561108c57602081850181015186830182015201611070565b8181111561109d5782602083870101525b50601f01601f19169290920160200192915050565b6001600160a01b0386811682528516602082015260a0604082018190526000906110de9083018661102d565b82810360608401526110f0818661102d565b905082810360808401526111048185611067565b98975050505050505050565b6001600160a01b03868116825285166020820152604081018490526060810183905260a06080820181905260009061114a90830184611067565b979650505050505050565b600060208252610ff2602083018461102d565b60006040825261117b604083018561102d565b828103602084015261118d818561102d565b95945050505050565b600060208252610ff26020830184611067565b60208082526028908201527f455243313135353a204552433131353552656365697665722072656a656374656040820152676420746f6b656e7360c01b606082015260800190565b60208082526025908201527f455243313135353a207472616e7366657220746f20746865207a65726f206164604082015264647265737360d81b606082015260800190565b6020808252602a908201527f455243313135353a20696e73756666696369656e742062616c616e636520666f60408201526939103a3930b739b332b960b11b606082015260800190565b600067ffffffffffffffff82111561129a5761129a611355565b5060209081020190565b600082198211156112b7576112b761133f565b500190565b6002810460018216806112d057607f821691505b602082108114156112f157634e487b7160e01b600052602260045260246000fd5b50919050565b601f8201601f1916810167ffffffffffffffff8111828210171561131d5761131d611355565b6040525050565b60006000198214156113385761133861133f565b5060010190565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fd5b600060033d11156105c957600481823e5160e01c90565b600060443d1015611392576105c9565b6040516003193d81016004833e81513d67ffffffffffffffff81602484011181841117156113c45750505050506105c9565b82850191508151818111156113de575050505050506105c9565b843d87010160208285010111156113fa575050505050506105c9565b611409602082860101876112f7565b509094505050505090565b6001600160e01b03198116811461142a57600080fd5b5056fea264697066735822122034a8067137ef1cdcc0926c0a00be82efa9422ce7665e518ec142bfdc4f6721a664736f6c63430008020033";
class ERC1155Upgradeable__factory extends ethers_1.ContractFactory {
    constructor(...args) {
        if (args.length === 1) {
            super(_abi, _bytecode, args[0]);
        }
        else {
            super(...args);
        }
    }
    deploy(overrides) {
        return super.deploy(overrides || {});
    }
    getDeployTransaction(overrides) {
        return super.getDeployTransaction(overrides || {});
    }
    attach(address) {
        return super.attach(address);
    }
    connect(signer) {
        return super.connect(signer);
    }
    static createInterface() {
        return new ethers_1.utils.Interface(_abi);
    }
    static connect(address, signerOrProvider) {
        return new ethers_1.Contract(address, _abi, signerOrProvider);
    }
}
exports.ERC1155Upgradeable__factory = ERC1155Upgradeable__factory;
ERC1155Upgradeable__factory.bytecode = _bytecode;
ERC1155Upgradeable__factory.abi = _abi;
